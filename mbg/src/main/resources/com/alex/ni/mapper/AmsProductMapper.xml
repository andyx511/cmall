<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.ni.mapper.AmsProductMapper">
  <resultMap id="BaseResultMap" type="com.alex.ni.model.AmsProduct">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="kind" jdbcType="VARCHAR" property="kind" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="is_new" jdbcType="INTEGER" property="isNew" />
    <result column="is_public" jdbcType="INTEGER" property="isPublic" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="gift_growth" jdbcType="INTEGER" property="giftGrowth" />
    <result column="gift_point" jdbcType="INTEGER" property="giftPoint" />
    <result column="detail_pic" jdbcType="VARCHAR" property="detailPic" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="sales_volume" jdbcType="INTEGER" property="salesVolume" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="is_discount" jdbcType="INTEGER" property="isDiscount" />
    <result column="discount_price" jdbcType="DECIMAL" property="discountPrice" />
    <result column="des" jdbcType="VARCHAR" property="des" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, kind, brand, pic, is_new, is_public, sort, price, unit, gift_growth, gift_point, 
    detail_pic, status, is_delete, sales_volume, comment_num, stock, is_discount, discount_price, 
    des
  </sql>
  <select id="selectByExample" parameterType="com.alex.ni.model.AmsProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ams_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ams_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.alex.ni.model.AmsProductExample">
    delete from ams_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alex.ni.model.AmsProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ams_product (name, kind, brand, 
      pic, is_new, is_public, 
      sort, price, unit, 
      gift_growth, gift_point, detail_pic, 
      status, is_delete, sales_volume, 
      comment_num, stock, is_discount, 
      discount_price, des)
    values (#{name,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{isNew,jdbcType=INTEGER}, #{isPublic,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR}, 
      #{giftGrowth,jdbcType=INTEGER}, #{giftPoint,jdbcType=INTEGER}, #{detailPic,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{salesVolume,jdbcType=INTEGER}, 
      #{commentNum,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{isDiscount,jdbcType=INTEGER}, 
      #{discountPrice,jdbcType=DECIMAL}, #{des,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.alex.ni.model.AmsProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ams_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="kind != null">
        kind,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="isPublic != null">
        is_public,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="giftGrowth != null">
        gift_growth,
      </if>
      <if test="giftPoint != null">
        gift_point,
      </if>
      <if test="detailPic != null">
        detail_pic,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="salesVolume != null">
        sales_volume,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="isDiscount != null">
        is_discount,
      </if>
      <if test="discountPrice != null">
        discount_price,
      </if>
      <if test="des != null">
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=INTEGER},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="giftGrowth != null">
        #{giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="giftPoint != null">
        #{giftPoint,jdbcType=INTEGER},
      </if>
      <if test="detailPic != null">
        #{detailPic,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="isDiscount != null">
        #{isDiscount,jdbcType=INTEGER},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alex.ni.model.AmsProductExample" resultType="java.lang.Long">
    select count(*) from ams_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ams_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.kind != null">
        kind = #{record.kind,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=INTEGER},
      </if>
      <if test="record.isPublic != null">
        is_public = #{record.isPublic,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.giftGrowth != null">
        gift_growth = #{record.giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="record.giftPoint != null">
        gift_point = #{record.giftPoint,jdbcType=INTEGER},
      </if>
      <if test="record.detailPic != null">
        detail_pic = #{record.detailPic,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.salesVolume != null">
        sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      </if>
      <if test="record.commentNum != null">
        comment_num = #{record.commentNum,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.isDiscount != null">
        is_discount = #{record.isDiscount,jdbcType=INTEGER},
      </if>
      <if test="record.discountPrice != null">
        discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ams_product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      kind = #{record.kind,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=INTEGER},
      is_public = #{record.isPublic,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      unit = #{record.unit,jdbcType=VARCHAR},
      gift_growth = #{record.giftGrowth,jdbcType=INTEGER},
      gift_point = #{record.giftPoint,jdbcType=INTEGER},
      detail_pic = #{record.detailPic,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      comment_num = #{record.commentNum,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      is_discount = #{record.isDiscount,jdbcType=INTEGER},
      discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      des = #{record.des,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alex.ni.model.AmsProduct">
    update ams_product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=INTEGER},
      </if>
      <if test="isPublic != null">
        is_public = #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="giftGrowth != null">
        gift_growth = #{giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="giftPoint != null">
        gift_point = #{giftPoint,jdbcType=INTEGER},
      </if>
      <if test="detailPic != null">
        detail_pic = #{detailPic,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        sales_volume = #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="isDiscount != null">
        is_discount = #{isDiscount,jdbcType=INTEGER},
      </if>
      <if test="discountPrice != null">
        discount_price = #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alex.ni.model.AmsProduct">
    update ams_product
    set name = #{name,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=INTEGER},
      is_public = #{isPublic,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      gift_growth = #{giftGrowth,jdbcType=INTEGER},
      gift_point = #{giftPoint,jdbcType=INTEGER},
      detail_pic = #{detailPic,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      sales_volume = #{salesVolume,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      is_discount = #{isDiscount,jdbcType=INTEGER},
      discount_price = #{discountPrice,jdbcType=DECIMAL},
      des = #{des,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>